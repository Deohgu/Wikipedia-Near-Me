{"version":3,"sources":["components/GpsIcon/GpsIcon.jsx","components/Ripples/Ripples.jsx","api/index.js","App.js","index.js"],"names":["GpsIcon","props","testingOutput","position","console","log","coords","latitude","longitude","heading","setLocation","onClick","navigator","geolocation","getCurrentPosition","Ripples","articles","undefined","map","curr","href","title","replace","apiTesting","location","a","url","fetch","fetchData","json","geosearch","query","App","useState","setArticles","useEffect","fetchedData","ReactDOM","render","document","getElementById"],"mappings":"sMA4BeA,EAzBC,SAACC,GAEf,IAMMC,EAAgB,SAACC,GACrBC,QAAQC,IAAR,qBACgBF,EAASG,OAAOC,SADhC,yBACyDJ,EAASG,OAAOE,UADzE,sBACgGL,EAASG,OAAOG,UAEhHR,EAAMS,YACJP,EAASG,OAAOC,SAAW,MAAQJ,EAASG,OAAOE,YAKvD,OACE,oCACE,4BAAQG,QAlBI,WACdC,UAAUC,YAAYC,mBAAmBZ,KAiBvC,SCDSa,EAnBC,SAACd,GACf,OACE,oCACGG,QAAQC,IAAIJ,EAAMe,eACCC,IAAnBhB,EAAMe,SACHf,EAAMe,SAASE,KAAI,SAACC,GAAD,OACjB,uBACEC,KACE,iCAAmCD,EAAKE,MAAMC,QAAQ,IAAK,MAG5DH,EAAKE,UAGVjB,QAAQC,IAAI,+BCdTkB,EAAU,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,yDAClBC,EADkB,6FAC0EF,EAD1E,qDASP,KAAbA,EAToB,iCAUEG,MAAMD,GAVR,cAUhBE,EAVgB,gBAaZA,EAAUC,OAbE,uBAYXC,EAZW,EAYpBC,MAASD,UAEX1B,QAAQC,IAAIyB,GAdU,kBAefA,GAfe,QAiBtB1B,QAAQC,IAAI,8BAjBU,4CAAH,sDC0BR2B,EAtBH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACTjB,EADS,KACCkB,EADD,OAEgBD,mBAAS,IAFzB,mBAETT,EAFS,KAECd,EAFD,KAchB,OAVAyB,qBAAU,YACO,uCAAG,4BAAAV,EAAA,sEACUF,EAAWC,GADrB,OACVY,EADU,OAEhBF,EAAYE,GAFI,2CAAH,qDAIfR,KACC,CAACJ,IAEJpB,QAAQC,IAAR,qBAA0BmB,IAGxB,oCACE,kBAAC,EAAD,CAASd,YAAaA,IACtB,kBAAC,EAAD,CAASM,SAAUA,MCnBzBqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.b7d73633.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst GpsIcon = (props) => {\n  // When run asks for current position and callsback a function and gives it the value as a parameter\n  const testing = () => {\n    navigator.geolocation.getCurrentPosition(testingOutput);\n  };\n\n  // function called in testing which gets data in the parameter from navigator.geolocation.getCurrentPosition\n  //And the data is accessed as parameter.coords.latitude.\n  const testingOutput = (position) => {\n    console.log(\n      `Latitude = ${position.coords.latitude}, Longitude = ${position.coords.longitude}, Facing = ${position.coords.heading}`\n    );\n    props.setLocation(\n      position.coords.latitude + \"%7C\" + position.coords.longitude\n    );\n  };\n\n  // onClick runs a function\n  return (\n    <>\n      <button onClick={testing}>GPS</button>\n    </>\n  );\n};\n\nexport default GpsIcon;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Ripples = (props) => {\n  return (\n    <>\n      {console.log(props.articles)}\n      {props.articles !== undefined\n        ? props.articles.map((curr) => (\n            <a\n              href={\n                \"https://en.wikipedia.org/wiki/\" + curr.title.replace(\" \", \"_\")\n              }\n            >\n              {curr.title}\n            </a>\n          ))\n        : console.log(\"Props.articles undefined.\")}\n    </>\n  );\n};\n\nexport default Ripples;\n","// gscoord=41.118277%7C-8.027207\n// | = %7C\n\nexport const apiTesting = async (location) => {\n  const url = `https://en.wikipedia.org/w/api.php?action=query&format=json&list=geosearch&gscoord=${location}&gsradius=10000&gslimit=20&gsnamespace=0&origin=*`;\n\n  // const articles = [];\n\n  // IIFE to contain the fetch and fill in the array outside of it.\n  // Not sure if I need to pass to articles here, remains to be seen later.\n  // It wasn't working because of this IIFE\n  // (async () => {\n  if (location !== \"\") {\n    const fetchData = await fetch(url);\n    const {\n      query: { geosearch },\n    } = await fetchData.json();\n    console.log(geosearch);\n    return geosearch;\n  } else {\n    console.log(\"Location in api undefined.\");\n  }\n  // })();\n};\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\nimport GpsIcon from \"./components/GpsIcon/GpsIcon\";\nimport Ripples from \"./components/Ripples/Ripples\";\nimport { apiTesting } from \"./api\";\n\nconst App = () => {\n  const [articles, setArticles] = useState([]);\n  const [location, setLocation] = useState(\"\");\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchedData = await apiTesting(location);\n      setArticles(fetchedData);\n    };\n    fetchData();\n  }, [location]);\n\n  console.log(`location = ${location}`);\n\n  return (\n    <>\n      <GpsIcon setLocation={setLocation} />\n      <Ripples articles={articles} />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}